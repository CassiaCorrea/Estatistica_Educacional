[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Estatistica Educacional",
    "section": "",
    "text": "Apresentação\nResoluçaõ das listas de exercícios",
    "crumbs": [
      "Apresentação"
    ]
  },
  {
    "objectID": "Tarefa1.html",
    "href": "Tarefa1.html",
    "title": "Tarefa 1",
    "section": "",
    "text": "1.Gráfico de Funções\nFigura 1.1 - Gráfico da função \\(f(x)=x^2-5x+6\\), \\(x \\ ε \\ [0,4]\\)\n\nlibrary(ggplot2)\nx &lt;- seq(0, 4, by = 0.01)\ny &lt;- x^2 - 5*x + 6\ndados &lt;- data.frame(x = x, y = y)\n\nggplot(dados, aes(x = x, y = y)) +\n  geom_line(color = \"red\") +\n  geom_hline(yintercept = 0) +\n  labs(x = \"x\", y = \"f(x)\") +\n  theme(panel.background = element_blank(),\n        axis.line = element_line())+\n  scale_x_continuous(expand = c(0, 0))\n\n\n\n\n\n\n\n\nFigura 1.2 Gráfico da função \\(f(x)= \\text{densidade da N(0,1)}\\) e \\(\\text{Distribuição Acumulada da N(0,1)}\\)\n\nlibrary(ggplot2)\nx &lt;- seq(-4, 4, by = 0.1)\ndensidade &lt;- dnorm(x, mean = 0, sd = 1)\ndistribuicao &lt;- pnorm(x, mean = 0, sd = 1)\ndados &lt;- data.frame(x = x, densidade = densidade, distribuicao = distribuicao)\n\nggplot(data = dados) +\n  geom_line(aes(x = x, y = densidade, color = \"Densidade\")) +\n  geom_line(aes(x = x, y = distribuicao, color = \"Distribuição Acumulada\")) +\n  labs(x = \"x\", y = \"f(x)\") +\n  scale_color_manual(values = c(\"Densidade\" = \"red\",\n                                \"Distribuição Acumulada\" = \"blue\")) +\n  theme(panel.background = element_blank(),\n        axis.line = element_line(),\n        legend.title = element_blank(),\n        legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0, 0))\n\n\n\n\n\n\n\n\nFigura 1.3. Gráfico da função \\(f(x)=\\frac{1}{1+\\exp(-D \\cdot a \\cdot (x-b))}\\), com \\(a=1.5\\), \\(b=1\\), para \\(D=1\\) e \\(D=1.7\\)\n\nlibrary(ggplot2)\n\na &lt;- 1.5\nb &lt;- 1\nx &lt;- seq(-4, 4, by = 0.1)\n\nf_D1 &lt;- 1 / (1 + exp(-1 * a * (x - b)))\nf_D17 &lt;- 1 / (1 + exp(-1.7 * a * (x - b)))\ndados &lt;- data.frame(\n  x = rep(x, 2),\n  y = c(f_D1, f_D17),\n  D = factor(rep(c(\"D=1\", \"D=1.7\"), each = length(x))))\n\nggplot(dados, aes(x = x, y = y, color = D)) +\n  geom_line() + labs(x = \"x\", y = \"f(x)\") +\n  scale_color_manual(values = c(\"D=1\" = \"red\", \"D=1.7\" = \"blue\")) +\n  theme(panel.background = element_blank(),\n        axis.line = element_line(),\n        legend.title = element_blank(),\n        legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0, 0))\n\n\n\n\n\n\n\n\nFigura 1.4. Comparando a função de distribuição \\(N(0,1)\\) com a função \\(f(x)=\\frac{1}{1+\\exp(-D \\cdot a \\cdot (x-b))}\\), com \\(a=1.5\\), \\(b=1\\), para \\(D=1.7\\).\n\nlibrary(ggplot2)\n\na &lt;- 1.5\nb &lt;- 1\nx &lt;- seq(-4, 4, by = 0.1)\n\ndistribuicao_normal &lt;- pnorm(x, mean = 0, sd = 1)\nf_D17 &lt;- 1 / (1 + exp(-1.7 * a * (x - b)))\n\ndados &lt;- data.frame(\n  x = rep(x, 2),\n  y = c(distribuicao_normal, f_D17),\n  Funcao = factor(rep(c(\"Distribuição N(0,1)\", \"Função D=1.7\"),\n                      each = length(x))))\n\nggplot(dados, aes(x = x, y = y, color = Funcao)) +\n  geom_line() + labs(x = \"x\", y = \"f(x)\") +\n  scale_color_manual(values = c(\"Distribuição N(0,1)\" = \"red\",\n                                \"Função D=1.7\" = \"blue\")) +\n  theme(panel.background = element_blank(), axis.line = element_line(),\n        legend.title = element_blank(), legend.position = \"bottom\") +\n  scale_y_continuous(expand = c(0, 0))\n\n\n\n\n\n\n\n\nFigura 1.5. Gráfico da função \\(f(x)=c + \\frac{1-c}{1+\\exp(-D \\cdot a \\cdot (x-b))}\\), com \\(a=1.5\\), \\(b=1\\), \\(c=0.2\\), \\(D=1.7\\)“,\n\nlibrary(ggplot2)\n\na &lt;- 1.5\nb &lt;- 1\nc &lt;- 0.2\nD &lt;- 1.7\nx &lt;- seq(-4, 4, by = 0.1)\n\nf_x &lt;- c + (1 - c) / (1 + exp(-D * a * (x - b)))\ndados &lt;- data.frame(x = x, y = f_x)\n\nggplot(dados, aes(x = x, y = y)) +\n  geom_line(color = \"red\") + labs(x = \"x\",  y = \"f(x)\") +\n  theme(panel.background = element_blank(), axis.line = element_line()) +\n  scale_y_continuous(expand = c(0, 0))\n\n\n\n\n\n\n\n\nFigura 1.6. Gráfico da função densidade da N(0,1) refletida \\((-f(x))\\) junto com 3 funções logísticas com parâmetros \\(\\zeta = (a, b, c)\\) dados por (1 ,.5, 0.2), (1, 1.5, 0.2) e (2, 1.5, 0.2)\n\nlibrary(ggplot2)\n\nx &lt;- seq(-3, 3, by = 0.1)\ndensidade_refletida &lt;- -dnorm(x, mean = 0, sd = 1)\n\nlogistica1 &lt;- 0.2 + (1 - 0.2) / (1 + exp(-1 * (x - 0.5)))\nlogistica2 &lt;- 0.2 + (1 - 0.2) / (1 + exp(-1 * (x - 1.5)))\nlogistica3 &lt;- 0.2 + (1 - 0.2) / (1 + exp(-2 * (x - 1.5)))\n\ndados &lt;- data.frame(\n  x = rep(x, 4),\n  y = c(densidade_refletida, logistica1, logistica2, logistica3),\n  Funcao = factor(rep(c(\"Densidade Refletida N(0,1)\",\n                        \"Logística 1\",\n                        \"Logística 2\",\n                        \"Logística 3\"), each = length(x))))\n\nggplot(dados, aes(x = x, y = y, color = Funcao)) +\n  geom_line() +\n  labs(x = \"Habilidade (θ)\", y = \"Probabilidade de Resposta Correta\") +\n  scale_color_manual(values = c(\"Densidade Refletida N(0,1)\" = \"blue\",\n                                \"Logística 1\" = \"red\",\n                                \"Logística 2\" = \"green\",\n                                \"Logística 3\" = \"purple\")) +\n  theme(panel.background = element_blank(), axis.line = element_line(),\n        legend.title = element_blank(), legend.position = \"bottom\") +\n  geom_hline(yintercept = 0) +\n  geom_vline(xintercept = 0) +\n  scale_x_continuous(limits = c(-3, 3), expand = c(0, 0))\n\n\n\n\n\n\n\n\n2.Geração de Dados Simulados\nFigura 2.1 Histograma da Distribuição Gerada de uma \\(v.a.\\) \\(X \\sim U(0,1).\\)\n\nlibrary(ggplot2)\nset.seed(123)\nvalores &lt;- runif(1000, min = 0, max = 1)\ndados &lt;- data.frame(valores = valores)\n\nggplot(dados, aes(x = valores)) +\n  geom_histogram(bins = 20, fill = \"#059\",color = \"#000\") +\n  labs(x = \"Valores\", y = \"Frequência\") +\n  theme(panel.background = element_blank(),\n        axis.line = element_line())+\n  scale_y_continuous(limits = c(0, 80), expand = c(0, 0))\n\n\n\n\n\n\n\n\nFigura 2.2 Distribuição Gerada de uma v.a. \\(X \\sim Bernoulli(0.3)\\).\n\nlibrary(ggplot2)\nset.seed(123)\np &lt;- 0.3\nn &lt;- 1000\nvalores &lt;- rbinom(n, size = 1, prob = p)\n\nmedia_teorica &lt;- p\nvariancia_teorica &lt;- p * (1 - p)\n\nmedia_empirica &lt;- mean(valores)\nvariancia_empirica &lt;- var(valores)\n\ncat(\"Média teórica: \", media_teorica, \"\\n\")\n\nMédia teórica:  0.3 \n\ncat(\"Média empírica: \", media_empirica, \"\\n\")\n\nMédia empírica:  0.295 \n\ncat(\"Variância teórica: \", variancia_teorica, \"\\n\")\n\nVariância teórica:  0.21 \n\ncat(\"Variância empírica: \", variancia_empirica, \"\\n\")\n\nVariância empírica:  0.2081832 \n\n\nFigura2.3. Distribuição Gerada de uma v.a. \\(Bin(10, 0.5)\\).\n\nlibrary(ggplot2)\nset.seed(123)\nn_trials &lt;- 10\np &lt;- 0.5\nn_samples &lt;- 1000\n\nvalores &lt;- rbinom(n_samples, size = n_trials, prob = p)\n\nmedia_empirica &lt;- mean(valores)\nvariancia_empirica &lt;- var(valores)\n\nmedia_teorica &lt;- n_trials * p\nvariancia_teorica &lt;- n_trials * p * (1 - p)\n\ncat(\"Média teórica: \", media_teorica, \"\\n\")\n\nMédia teórica:  5 \n\ncat(\"Média empírica: \", media_empirica, \"\\n\")\n\nMédia empírica:  4.975 \n\ncat(\"Variância teórica: \", variancia_teorica, \"\\n\")\n\nVariância teórica:  2.5 \n\ncat(\"Variância empírica: \", variancia_empirica, \"\\n\")\n\nVariância empírica:  2.556932 \n\n\n2.4. Distribuição Gerada de uma v.a. \\(N(0, 1)\\).\n\nlibrary(ggplot2)\nset.seed(123)\n\nn_samples &lt;- 1000\nmedia &lt;- 0\ndesvio_padrao &lt;- 1\nvalores &lt;- rnorm(n_samples, mean = media, sd = desvio_padrao)\n\nmedia_teorica &lt;- media\nvariancia_teorica &lt;- desvio_padrao^2\n\nmedia_empirica &lt;- mean(valores)\nvariancia_empirica &lt;- var(valores)\n\ncat(\"Média teórica: \", media_teorica, \"\\n\")\n\nMédia teórica:  0 \n\ncat(\"Média empírica: \", media_empirica, \"\\n\")\n\nMédia empírica:  0.01612787 \n\ncat(\"Variância teórica: \", variancia_teorica, \"\\n\")\n\nVariância teórica:  1 \n\ncat(\"Variância empírica: \", variancia_empirica, \"\\n\")\n\nVariância empírica:  0.9834589 \n\n\n3.Simulando dados de avaliação\n3.1. Gerando o \\(n=1000\\) valores de uma \\(N(0,1)\\) representando as habilidades dos indivíduos (x) na coluna A do Excel\n\nlibrary(openxlsx)\nn &lt;- 1000\na &lt;- 1.5\nb &lt;- -0.5\nset.seed(123)\nhabilidades &lt;- rnorm(n, mean = 0, sd = 1)\nprobabilidades &lt;- 1 / (1 + exp(-(a * habilidades + b)))\nrespostas &lt;- rbinom(n, size = 1, prob = probabilidades)\n\ndados &lt;- data.frame(\n  Habilidade = habilidades,\n  Probabilidade = probabilidades,\n  Resposta = respostas)\n\nwrite.xlsx(dados, file = \"C:/Users/Cassia Correa/OneDrive/Estatistica/Estatistica Educacional/simulacao_dados.xlsx\", rowNames = FALSE)\n\n4.Otimização: obtenção do máximo de uma função\n4.1- Valor que maximiza a densidade de uma N(0,1)\n\n4.2- \\(P(U = x) = p^x (1 - p)^{1 - x}\\) e uma amostra \\((x_1, \\ldots, x_{10}) = (0, 1, 0, 0, 1, 0, 0, 0, 1, 0)\\) apos a construção da função de verossimilhança (produto das probabilidades). Usado Suplemento Solver para obter o valor de \\(p\\) que maximiza a verossimilhança.\n\n5.Gerenciamento de Bases de Dados no EXCEL\nRealizado o gerenciamento de um banco de dados no Excel utilizando macro VBA. Durante esse processo, geramos um código que contém as respostas correspondentes às alternativas escolhidas pelos participantes do ENEM 2017, no caderno azul, referentes às questões de matemática. O arquivo está no formato de texto formatado, com os valores separados por espaços\n\n6.Gerenciamento de Bases de Dados no R\n\nlibrary(readxl)\nlibrary(ggplot2)\n\nrespostas &lt;- read_excel(\"ENEM2017MT.xlsx\")\ngabarito &lt;- read.csv(\"ENEM2017MT_infoitem.csv\",\n                     sep = \";\", stringsAsFactors = FALSE)\n\ngabarito_MT &lt;- gabarito$GABARITO[1:45]\n\nrespostas_split &lt;- data.frame(\n  do.call(rbind, strsplit(substr(respostas$TX_RESPOSTAS_MT, 1, 45), \"\")))\ncolnames(respostas_split) &lt;- paste0(\"Q\", 1:45)\n\nrespostas_dicotomizadas &lt;- respostas_split\nfor (i in 1:45) {\n  respostas_dicotomizadas[[i]] &lt;- ifelse(\n    respostas_split[[i]] == gabarito_MT[i], 1, 0)}\n\nrespostas_dicotomizadas &lt;- cbind(NU_INSCRICAO = respostas$NU_INSCRICAO, respostas_dicotomizadas)\nrespostas_dicotomizadas$SCORE &lt;- rowSums(respostas_dicotomizadas[2:46])\n\nrespostas_formatadas &lt;- apply(\n  respostas_dicotomizadas[, 1:46], 1,function(row) {\n  paste(substr(row[1], 1, 12), paste(row[-1], collapse = \"\"), sep = \" \")})\ncat(head(respostas_formatadas, 12), sep = \"\\n\")\n\n170000007404 000001100000101000100111000010100000000100000\n170005101416 000010000000000010010010001000100100000100010\n170000098218 101011000011101011011010001111001000011100100\n170005205041 100011011111001011010111111111000011011101111\n170005203958 100111000100100000001111000010000010100110010\n170000162158 111111111011100111011110011111101110101100110\n170000147521 101011110111101111111110011000101111101111111\n170000182413 100011000010000000000011110010100001001000000\n170001874145 100011000001101001110011001010101010011100110\n170003535712 111001111011000111111111001010100000000100000\n170001904052 101101000101000110000000001101000101010000100\n170003745189 100011000001000111000010111000000110100110001\n\nggplot(respostas_dicotomizadas, aes(x = SCORE)) +\n  geom_histogram(binwidth = 1, color = \"black\", fill = \"lightblue\") +\n  labs(title = \"Distribuição dos Escores (Número de Acertos)\",\n       x = \"Número de Acertos\",\n       y = \"Frequência\") +\n  theme(panel.background = element_blank(),\n        axis.line = element_line()) +\n  scale_y_continuous(expand = c(0, 0))\n\n\n\n\n\n\n\nproporcao_acertos &lt;- colMeans(respostas_dicotomizadas[2:46])\nggplot(data.frame(Proporcao = proporcao_acertos), aes(x = Proporcao)) +\n  geom_histogram(binwidth = 0.05, color = \"black\", fill = \"lightgreen\") +\n  labs(title = \"Distribuição das Proporções de Acertos por Item\",\n       x = \"Proporção de Acertos\",\n       y = \"Frequência\") +\n  theme(panel.background = element_blank(),\n        axis.line = element_line()) +\n  scale_y_continuous(expand = c(0, 0))\n\n\n\n\n\n\n\n\n7.Gráfico da Proporção de acerto por escore para os 5 primeiros itens.\n\nlibrary(readxl)\nlibrary(ggplot2)\nrespostas &lt;- read_excel(\"ENEM2017MT.xlsx\")\ngabarito &lt;- read.csv(\"ENEM2017MT_infoitem.csv\",\n                     sep = \";\", stringsAsFactors = FALSE)\ngabarito_MT &lt;- gabarito$GABARITO[1:45]\nrespostas_split &lt;- data.frame(\n  do.call(rbind, strsplit(substr(respostas$TX_RESPOSTAS_MT, 1, 45), \"\")))\ncolnames(respostas_split) &lt;- paste0(\"Q\", 1:45)\nrespostas_dicotomizadas &lt;- respostas_split\nfor (i in 1:45) {\n  respostas_dicotomizadas[[i]] &lt;- ifelse(\n    respostas_split[[i]] == gabarito_MT[i], 1, 0)}\n\nrespostas_dicotomizadas$SCORE &lt;- rowSums(respostas_dicotomizadas)\n\nproporcao_por_escore &lt;- lapply(1:5, function(i) {\n  tapply(respostas_dicotomizadas[[i]], respostas_dicotomizadas$SCORE, mean)})\n\ndf_plot &lt;- data.frame(\n  Escore = rep(as.numeric(names(proporcao_por_escore[[1]])), 5),\n  Proporcao = unlist(proporcao_por_escore),\n  Item = rep(1:5, each = length(proporcao_por_escore[[1]])))\n\nggplot(df_plot, aes(\n  x = Escore, y = Proporcao, color = factor(Item), label = Item)) +\n  geom_line() + geom_text(size = 3) +\n  labs(x = \"Escore\", y = \"Proporção de Acertos\", color = \"Item\") +\n  theme(panel.background = element_blank(),\n        axis.line = element_line()) +\n  scale_y_continuous(limits = c(0, 1))\n\n\n\n\n\n\n\n\n8.Histograma Por Área do Conhecimento.\n\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(rlang)\n\nitens_prova &lt;- read.csv(\"ITENS_PROVA_2017.csv\", sep = \";\", encoding = \"latin1\")\nenem_data &lt;- read.csv(\"ENEM2017.csv\", sep = \",\", encoding = \"latin1\")\nlc_data &lt;- enem_data[, c(\"NU_NOTA_LC\", \"TX_RESPOSTAS_LC\", \"TX_GABARITO_LC\")]\n\nareas &lt;- c(\"NU_NOTA_CN\", \"NU_NOTA_CH\", \"NU_NOTA_LC\", \"NU_NOTA_MT\")\n\nfor (area in areas) {\n  p &lt;- ggplot(enem_data, aes(x = !!sym(area))) +\n    geom_histogram(binwidth = 20, fill = \"#005090\",\n                   color = \"black\", alpha = 0.7) +\n    labs(title = paste(\"Histograma das Notas em\", gsub(\"NU_NOTA_\", \"\", area)),\n         x = \"Nota\", y = \"Frequência\") +\n    theme(panel.background = element_blank(), axis.line = element_line()) +\n    scale_y_continuous(limits = c(0, 12000), expand = c(0, 0))\n  print(p)}",
    "crumbs": [
      "Tarefa 1"
    ]
  },
  {
    "objectID": "Tarefa2.html",
    "href": "Tarefa2.html",
    "title": "Tarefa 2",
    "section": "",
    "text": "1 + 1\n\n[1] 2",
    "crumbs": [
      "Tarefa 2"
    ]
  }
]